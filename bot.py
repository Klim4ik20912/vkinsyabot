import random

from vkbottle.bot import Bot, Message
from vkbottle import Keyboard, KeyboardButtonColor, \
                                  Text, OpenLink, Location, EMPTY_KEYBOARD, \
                                  template_gen, TemplateElement, Callback
from vkbottle import GroupEventType, GroupTypes, VKAPIError
from vkbottle.modules import json
import sqlite3
from vkbottle import PhotoMessageUploader, VoiceMessageUploader, DocMessagesUploader
from datetime import date, datetime
from vkbottle.api import API
import time, math

bot = Bot(token="4c67c62573d20bc73ae4b2f442e116e6edac9642c84077af20ea4850ab95621611507dd99a1c68444e7fc")

# db initialize
db = sqlite3.connect("data.db")
sql = db.cursor()
db.commit()

@bot.on.private_message(text=["–ù–∞—á–∞—Ç—å", "Start", "–°—Ç–∞—Ä—Ç"])
async def reg_handler(message: Message):
    peer_id = message.peer_id
    sql.execute(f"SELECT * FROM users WHERE user_id = {peer_id}")
    if sql.fetchone() is None:
        sql.execute(f"INSERT INTO users VALUES ({peer_id}, 'NULL', {0}, {0}, {500}, {0}, 'NULL')")
        db.commit()
        keyboard = Keyboard()
        keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
        await message.answer("—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ! —É —Ç–µ–±—è –µ—Å—Ç—å 500$ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞.", keyboard=keyboard)
        print(" + —Ä–µ–≥ ")

def snus_draw(peer_id):
    snus = sql.execute(f"SELECT snus FROM users WHERE user_id = {peer_id}").fetchone()[0]
    if snus == "ALFA":
        return "alfa.jpg"
    elif snus == "MAD":
        return "mad.jpg"
    else:
        return "garage.jpg"

@bot.on.private_message(payload={"cmd": "menu"})
@bot.on.private_message(text=["–º–µ–Ω—é", "–ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "—è"])
async def menu_handler(message: Message):
    peer_id = message.peer_id
    keyboard = Keyboard()
    keyboard.add(Text("–≤–∫–∏–Ω—É—Ç—Å—è", {"cmd": "vkid"}), color=KeyboardButtonColor.POSITIVE)
    keyboard.row()
    keyboard.add(Text("–±–∞–Ω–¥—ã", {"cmd": "clan"}), color=KeyboardButtonColor.PRIMARY)
    keyboard.add(Text("—à–æ–ø", {"cmd": "shop"}), color=KeyboardButtonColor.PRIMARY)
    keyboard.add(Text("üîÑ", {"cmd": "menu"}), color=KeyboardButtonColor.SECONDARY)
    for i in sql.execute(f"SELECT balance, snus, jmixov, pakov, vtoryakov FROM users WHERE user_id = {peer_id}"):
        balance = i[0]
        snus = i[1]
        jmixov = i[2]
        pakov = i[3]
        vtor = i[4]
        photo_att = PhotoMessageUploader(bot.api)
        url = snus_draw(peer_id)
        photo = await photo_att.upload(url)
        user = await bot.api.users.get(message.from_id)
        if snus == "NULL":
            await message.answer("–∑–¥–∞—Ä–æ–≤–∞ " + str(user[0].first_name) + ". –Ω–∞ —Å—á–µ—Ç—É —É —Ç–µ–±—è: " + str(balance) + "$" "\n—É —Ç–µ–±—è: –Ω–µ—Ç—É —Å–Ω—é—Å–∞" + "\n–Ω–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É: " + str(jmixov) + " –∂–º—ã—Ö–æ–≤", keyboard=keyboard, attachment=photo)
        else:
            await message.answer("–∑–¥–∞—Ä–æ–≤–∞ " + str(user[0].first_name) + ". –Ω–∞ —Å—á–µ—Ç—É —É —Ç–µ–±—è: " + str(balance) + "$" "\n—É —Ç–µ–±—è: " + str(snus) + " " + str(pakov) + " –ø–∞–∫–æ–≤. " + str(vtor) + " –≤—Ç–æ—Ä—è–∫–æ–≤" + "\n –Ω–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É: " + str(jmixov) + " –∂–º—ã—Ö–æ–≤", keyboard=keyboard, attachment=photo)


@bot.on.private_message(payload={"cmd": "top"})
@bot.on.private_message(text="—Ç–æ–ø")
async def top_handler(message: Message):
    peer_id = message.peer_id
    user = await bot.api.users.get(message.peer_id)
    counter = 0
    for row in sql.execute("SELECT jmixov, user_id FROM users ORDER BY jmixov DESC LIMIT 3"):
            counter += 1
            ids = row[1]
            user = await bot.api.users.get(ids)
            jmixov = f' #{counter} | –∂–º—ã—Ö–æ–≤: {row[0]}'
            await message.answer(user[0].first_name + str(jmixov))

@bot.on.raw_event(GroupEventType.LIKE_REMOVE, dataclass=GroupTypes.LikeRemove)
async def remove_like_handler(event: GroupTypes.LikeRemove):
    peer_id = event.object.liker_id
    for i in sql.execute(f"SELECT balance, pakov, snus FROM users WHERE user_id = {peer_id}"):
        balance = i[0]
        pakov = i[1]
        snus = i[2]
        if snus != "NULL" or pakov > 0:
            pakov -= 2
            balance -= 25
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {peer_id}")
            sql.execute(f"UPDATE users SET pakov = {pakov} WHERE user_id = {peer_id}")
            db.commit()
            await bot.api.messages.send(
                peer_id=event.object.liker_id,
                message="üíî —è —É —Ç–µ–±—è –≤—Å–µ –æ—Ç–Ω–∏–º–∞—é...",
                random_id=0
            )
        else:
            balance -= 25
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {peer_id}")
            db.commit()
            await bot.api.messages.send(
                peer_id=event.object.liker_id,
                message="üíî —è —É —Ç–µ–±—è –≤—Å–µ –æ—Ç–Ω–∏–º–∞—é...",
                random_id=0
            )

@bot.on.raw_event(GroupEventType.LIKE_ADD, dataclass=GroupTypes.LikeAdd)
async def like_handler(event: GroupTypes.LikeAdd):
    peer_id = event.object.liker_id
    for i in sql.execute(f"SELECT balance, pakov, snus FROM users WHERE user_id = {peer_id}"):
        balance = i[0]
        pakov = i[1]
        snus = i[2]
        if snus != "NULL":
            pakov += 2
            balance += 25
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {peer_id}")
            sql.execute(f"UPDATE users SET pakov = {pakov} WHERE user_id = {peer_id}")
            db.commit()
            await bot.api.messages.send(
                peer_id=event.object.liker_id,
                message="‚ù§ –∑–∞ –ª–∞–π–∫–∞ –ø–æ—Å—Ç–∞ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å: 25" + "$ \n –∏ " + " 2 –ø–∞–∫–∞",
                random_id=0
            )
        else:
            balance += 25
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {peer_id}")
            db.commit()
            await bot.api.messages.send(
                peer_id=event.object.liker_id,
                message="‚ù§ –∑–∞ –ª–∞–π–∫–∞ –ø–æ—Å—Ç–∞ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å: 25$ \n –∞ —Å–Ω—é—Å–∞ —É —Ç–µ–±—è –Ω–µ—Ç—É(",
                random_id=0
            )

@bot.on.message(text='/mail <txt>')
async def lsmsg(ans: Message, txt):
    for user in sql.execute("SELECT user_id FROM users"):
        for_users = user[0]
        await bot.api.messages.send(peer_id=for_users, random_id=0, message=txt)

@bot.on.private_message(payload={"cmd": "clan"})
@bot.on.private_message(text=["–±–∞–Ω–¥—ã", "–±–∞–Ω–¥–∞"])
async def clan_handler(message: Message):
    peer_id = message.peer_id
    keyboard = Keyboard(one_time=True).add(Text("–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é", {"cmd": "menu"}))
    await message.answer("–±–∞–Ω–¥—ã...", keyboard=keyboard)

@bot.on.private_message(payload={"cmd": "shop"})
@bot.on.private_message(text=["–º–∞–≥–∞–∑–∏–Ω", "–º–∞–≥–∞–∑", "—à–æ–ø"])
async def shop_handler(message: Message):
    peer_id = message.peer_id
    user = await bot.api.users.get(message.from_id)
    await message.answer("–¥–∞—Ä–æ–≤–∞, " + str(user[0].first_name) + ". –≤—Å–µ —á—Ç–æ –µ—Å—Ç—å:\n RED(150$) \n MAD(150$ \n —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –Ω–∞–ø–∏—à–∏: /buy name \n –Ω–∞–ø—Ä–∏–º–µ—Ä: /buy RED")

@bot.on.private_message(text=["/buy <name>", "/buy"])
async def buy_handler(message: Message, name=None):
    peer_id = message.peer_id
    for i in sql.execute(f"SELECT balance, pakov, snus FROM users WHERE user_id = {peer_id}"):
        balance = i[0]
        pakov = i[1]
        snus = i[2]
    if name is not None:
        if snus == "NULL":
            if name == "RED" and balance >= 150:
                balance -= 150
                pakov += 20
                sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {peer_id}")
                sql.execute(f"UPDATE users SET snus = 'RED' WHERE user_id = {peer_id}")
                sql.execute(f"UPDATE users SET pakov = {pakov} WHERE user_id = {peer_id}")
                db.commit()
                keyboard = Keyboard()
                keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
                await message.answer("—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª RED. \n –Ω–∞ —Å—á–µ—Ç—É —É —Ç—è: " + str(balance) + "$", keyboard=keyboard)
            elif name == "MAD" and balance >= 150:
                balance -= 150
                pakov += 20
                sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {peer_id}")
                sql.execute(f"UPDATE users SET snus = 'MAD' WHERE user_id = {peer_id}")
                sql.execute(f"UPDATE users SET pakov = {pakov} WHERE user_id = {peer_id}")
                db.commit()
                keyboard = Keyboard()
                keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
                await message.answer("—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª MAD. \n –Ω–∞ —Å—á–µ—Ç—É —É —Ç—è: " + str(balance) + "$", keyboard=keyboard)
            if balance < 150:
                keyboard = Keyboard()
                keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
                await message.answer("—É —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–Ω—é—Å", keyboard=keyboard)
            elif balance <150:
                keyboard = Keyboard()
                keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
                await message.answer("—É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —Å–Ω—é—Å", keyboard=keyboard)
    else:
        keyboard = Keyboard()
        keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
        await message.answer("—Ç—ã –≤–≤–µ–ª –Ω–µ–∫–∫–æ—Ä–µ—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–Ω—é—Å–∞!", keyboard=keyboard)

@bot.on.private_message(payload={"cmd": "vkid"})
@bot.on.private_message(text=["–≤–∫–∏–Ω—É—Ç—Å—è", "–≤–∫–∏–¥", "–æ—Ñ–æ—Ä–º–∏—Ç—å"])
async def vkid_handler(message: Message):
    peer_id = message.peer_id
    keyboard = Keyboard()
    keyboard.add(Text("—Å–≤–µ–∂–∞–∫"), color=KeyboardButtonColor.POSITIVE)
    keyboard.add(Text("–≤—Ç–æ—Ä—è–∫"), color=KeyboardButtonColor.NEGATIVE)
    keyboard.row()
    keyboard.add(Text("–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.PRIMARY)

    await message.answer("–≤—ã–±–µ—Ä–∏ –∫–∞–∫–æ–π –ø–∞–∫ –∫–∏–¥–∞–µ–º.", keyboard=keyboard)

    @bot.on.private_message(text="—Å–≤–µ–∂–∞–∫")
    async def svejak_handler(message: Message):
        for i in sql.execute(f"SELECT pakov, snus FROM users WHERE user_id = {peer_id}"):
            pakov = i[0]
            snus = i[1]
            if pakov != 0:
                global need
                need = random.randint(7, 10)
                print(need)
                pakov -= 1
                sql.execute(f"UPDATE users SET pakov = {pakov} WHERE user_id = {peer_id}")
                db.commit()
                keyboard = Keyboard()
                keyboard.add(Text("—Å–∫–∏–Ω—É—Ç—å –ø–∞–∫", {"cmd": "skinut"}), color=KeyboardButtonColor.POSITIVE)
                keyboard.row()
                keyboard.add(Text("–æ–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è", {"cmd": "update_time"}), color=KeyboardButtonColor.PRIMARY)
                await message.answer("—Ç—ã –≤–∫–∏–Ω—É–ª –ø–∞–∫! \n –æ—Å—Ç—Ä–æ–∂–Ω–æ, –ø–∞–∫ –º–æ–∂–Ω–æ –Ω–µ–¥–æ–¥–µ—Ä–∂–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–¥–µ—Ä–∂–∞—Ç—å. \n "
                                     "—á—Ç–æ–±—ã —ç—Ç–æ–≥–æ –Ω–µ —Å–ª—É—á–∏–ª–æ—Å—å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã—Ç–∞—â–∏—Ç—å –µ–≥–æ \n —á–µ—Ä–µ–∑: " + str(need) + " —Å–µ–∫.", keyboard=keyboard)
                global vkid_time
                vkid_time = datetime.now()
                print("–≤–∫–∏–¥ —Ç–∞–π–º " + str(vkid_time))
            else:
                sql.execute(f"UPDATE users SET snus = 'NULL' WHERE user_id = {peer_id}")
                db.commit()
                keyboard = Keyboard()
                keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
                await message.answer("—É —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–∞–∫–∏(", keyboard=keyboard)


    @bot.on.private_message(text="–≤—Ç–æ—Ä—è–∫")
    async def vtoryak_handler(message: Message):
        for i in sql.execute(f"SELECT vtoryakov, snus FROM users WHERE user_id = {peer_id}"):
            pakov = i[0]
            snus = i[1]
            if pakov != 0:
                rand = random.randint(1, 2)
                if rand == 1:
                    global need
                    need = random.randint(7, 10)
                    print(need)
                    pakov -= 1
                    sql.execute(f"UPDATE users SET pakov = {pakov} WHERE user_id = {peer_id}")
                    db.commit()
                    keyboard = Keyboard()
                    keyboard.add(Text("—Å–∫–∏–Ω—É—Ç—å –ø–∞–∫", {"cmd": "skinut"}), color=KeyboardButtonColor.POSITIVE)
                    keyboard.row()
                    keyboard.add(Text("–æ–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è", {"cmd": "update_time"}), color=KeyboardButtonColor.PRIMARY)
                    await message.answer("—Ç—ã –≤–∫–∏–Ω—É–ª –ø–∞–∫! \n –æ—Å—Ç—Ä–æ–∂–Ω–æ, –ø–∞–∫ –º–æ–∂–Ω–æ –Ω–µ–¥–æ–¥–µ—Ä–∂–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–¥–µ—Ä–∂–∞—Ç—å. \n "
                                        "—á—Ç–æ–±—ã —ç—Ç–æ–≥–æ –Ω–µ —Å–ª—É—á–∏–ª–æ—Å—å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã—Ç–∞—â–∏—Ç—å –µ–≥–æ \n —á–µ—Ä–µ–∑: " + str(need) + " —Å–µ–∫.", keyboard=keyboard)
                    global vkid_time
                    vkid_time = datetime.now()
                    print("–≤–∫–∏–¥ —Ç–∞–π–º " + str(vkid_time))
                else:
                    keyboard = Keyboard()
                    keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
                    await message.answer("–≤—Ç–æ—Ä—è–∫ –ø–æ—Å—Ç—É–ø–∏–ª –∫–∞–∫ –≥–Ω–∏–¥–∞ –∏ –ø–æ—Ä–≤–∞–ª—Å—è", keyboard=keyboard)
                    pakov -= 1
                    sql.execute(f"UPDATE users SET pakov = {pakov} WHERE user_id = {peer_id}")
                    db.commit()
            else:
                keyboard = Keyboard()
                keyboard.add(Text("–≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.POSITIVE)
                await message.answer("—É —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–∞–∫–∏(", keyboard=keyboard)


@bot.on.private_message(payload={"cmd": "skinut"})
@bot.on.private_message(text="–≤—ã—Å—É–Ω—É—Ç—å –ø–∞–∫")
async def visunut_handler(message: Message):
    peer_id = message.peer_id
    skid_time = datetime.now()
    count = skid_time - vkid_time
    print(count)
    if count.seconds == need:
        for i in sql.execute(f"SELECT balance, vtoryakov, jmixov FROM users WHERE user_id = {peer_id}"):
            balance = i[0]
            vtoryakov = i[1]
            jmixov = i[2]
            vtoryakov += 1
            balance += 30
            jmixov += 1
            sql.execute(f"UPDATE users SET vtoryakov = {vtoryakov} WHERE user_id = {peer_id}")
            sql.execute(f"UPDATE users SET balance = {balance} WHERE user_id = {peer_id}")
            sql.execute(f"UPDATE users SET jmixov = {jmixov} WHERE user_id = {peer_id}")
            db.commit()
            keyboard = Keyboard()
            keyboard.add(Text("–∫–∏–Ω—É—Ç—å –µ—â–µ", {"cmd": "vkid"}), color=KeyboardButtonColor.POSITIVE)
            keyboard.add(Text("–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.PRIMARY)
            await message.answer("–≤—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, + 1 –∂–º—ã—Ö, + –≤—Ç–æ—Ä—è–∫, + 30$", keyboard=keyboard)

    if count.seconds > need:
        keyboard = Keyboard()
        keyboard.add(Text("–∫–∏–Ω—É—Ç—å –µ—â–µ", {"cmd": "vkid"}), color=KeyboardButtonColor.POSITIVE)
        keyboard.add(Text("–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.PRIMARY)
        await message.answer("–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, —Ç—ã –ø–µ—Ä–µ–¥–µ—Ä–∂–∞–ª –ø–∞–∫...", keyboard=keyboard)
    if count.seconds < need:
        keyboard = Keyboard()
        keyboard.add(Text("–∫–∏–Ω—É—Ç—å –µ—â–µ", {"cmd": "vkid"}), color=KeyboardButtonColor.POSITIVE)
        keyboard.add(Text("–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é", {"cmd": "menu"}), color=KeyboardButtonColor.PRIMARY)
        await message.answer("–Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, —Ç—ã –Ω–µ–¥–æ–¥–µ—Ä–∂–∞–ª –ø–∞–∫...", keyboard=keyboard)

@bot.on.private_message(payload={"cmd": "update_time"})
@bot.on.private_message(text="–æ–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è")
async def update_handler(message: Message):
    now_time = datetime.now()
    up_counter = now_time.second - vkid_time.second - need
    await message.answer("—Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–∫–∏–Ω—É—Ç—å —á–µ—Ä–µ–∑ " + str(up_counter * -1) + " —Å–µ–∫")


@bot.on.chat_message(text="—è")
async def ya_handler(message: Message):
    peer_id = message.from_id
    for i in sql.execute(f"SELECT balance, pakov, snus, jmixov FROM users WHERE user_id = {peer_id}"):
        balance = i[0]
        pakov = i[1]
        snus = i[2]
        jmixov = i[3]
        photo_att = PhotoMessageUploader(bot.api)
        url = snus_draw(peer_id)
        photo = await photo_att.upload(url)
        user = await bot.api.users.get(message.from_id)
        if snus == "NULL":
            await message.answer("–ø—Ä–∏–≤–µ—Ç—Å–≤—É—é " + str(user[0].first_name) + ". –Ω–∞ —Å—á–µ—Ç—É —É —Ç–µ–±—è: " + str(balance) + "$" "\n—É —Ç–µ–±—è: –Ω–µ—Ç—É —Å–Ω—é—Å–∞" + "\n–Ω–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É: " + str(jmixov) + " –∂–º—ã—Ö–æ–≤", attachment=photo)
        else:
            await message.answer("–∑–¥–∞—Ä–æ–≤–∞ " + str(user[0].first_name) + ". –Ω–∞ —Å—á–µ—Ç—É —É —Ç–µ–±—è: " + str(balance) + "$" "\n—É —Ç–µ–±—è: " + str(snus) + " " + str(pakov) + " –ø–∞–∫–æ–≤" + "\n–Ω–∞ —Ç–≤–æ–µ–º —Å—á–µ—Ç—É: " + str(jmixov) + " –∂–º—ã—Ö–æ–≤", attachment=photo)


@bot.on.chat_message(text="—Ç–æ–ø")
async def chat_top_handler(message: Message):
    peer_id = message.from_id
    user = await bot.api.users.get(message.from_id)
    counter = 0
    for row in sql.execute("SELECT jmixov, user_id FROM users ORDER BY jmixov DESC LIMIT 3"):
            counter += 1
            ids = row[1]
            user = await bot.api.users.get(ids)
            jmixov = f' #{counter} | –∂–º—ã—Ö–æ–≤: {row[0]}'
            await message.answer(user[0].first_name + str(jmixov))

bot.run_forever()
